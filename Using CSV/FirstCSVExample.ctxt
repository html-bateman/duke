#BlueJ class context
comment0.target=FirstCSVExample
comment0.text=\n\ \u5728\u8FD9\u91CC\u7ED9\u51FA\u5BF9\u7C7B\ FirstCSVExample\ \u7684\u63CF\u8FF0\u3002\n\ \n\ @\u4F5C\u8005\uFF08\u4F60\u7684\u540D\u5B57\uFF09\n\ @\u7248\u672C\uFF08\u4E00\u4E2A\u7248\u672C\u53F7\u6216\u8005\u4E00\u4E2A\u65E5\u671F\uFF09\n
comment1.params=
comment1.target=void\ readFood()
comment10.params=
comment10.target=void\ testbigExporters()
comment11.params=
comment11.target=void\ whoExportsCoffee()
comment12.params=parser
comment12.target=org.apache.commons.csv.CSVRecord\ hottestHourInFile(org.apache.commons.csv.CSVParser)
comment13.params=
comment13.target=void\ testhottestHourInFile()
comment14.params=
comment14.target=org.apache.commons.csv.CSVRecord\ hottestInManyDays()
comment15.params=
comment15.target=void\ testhottestInManyDays()
comment16.params=currentRow\ largestSoFar
comment16.target=org.apache.commons.csv.CSVRecord\ getLargestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment17.params=parser
comment17.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment18.params=parser
comment18.target=void\ printDateNTemp(org.apache.commons.csv.CSVParser)
comment19.params=
comment19.target=void\ testcoldestHourInFile()
comment2.params=parser\ exportOfInterest
comment2.target=void\ listExporters(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment20.params=
comment20.target=java.lang.String\ fileWithColdestTemperature()
comment21.params=
comment21.target=void\ testFileWithColdestTemperature()
comment22.params=parsedfile
comment22.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment23.params=
comment23.target=void\ testLowestHumidityInfile()
comment24.params=
comment24.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment25.params=
comment25.target=void\ testLowestHumidityInManyFiles()
comment26.params=parser
comment26.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment27.params=parser\ value
comment27.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment28.params=
comment28.target=void\ testaverageTemperatureInFile()
comment29.params=
comment29.target=void\ testaverageTemperatureWithHighHumidityInFile()
comment3.params=parser\ countryOfInterest
comment3.target=void\ countryInfo(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment4.params=
comment4.target=void\ testcountryInfo()
comment5.params=parser\ exportItem1\ exportItem2
comment5.target=void\ listExportersTwoProducts(org.apache.commons.csv.CSVParser,\ java.lang.String,\ java.lang.String)
comment6.params=
comment6.target=void\ testTwoProducts()
comment7.params=parser\ exportItem
comment7.target=int\ numberOfExporters(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment8.params=
comment8.target=void\ testNumber()
comment9.params=parser\ valueCompare
comment9.target=void\ bigExporters(org.apache.commons.csv.CSVParser,\ java.lang.String)
numComments=30
